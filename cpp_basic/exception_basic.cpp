#include <iostream>
using namespace std;

/*
    异常处理(exception handling): 允许程序中独立开发的部分能够在运行时就出现的问题进行通信并做出相应的处理
    异常使得我们能够将问题的检测与解决过程分离开来。程序的一部分负责检测问题的出现，程序的另一部分负责解决该问题
        

    异常是指存在于运行时的反常行为，这些行为超出了函数正常功能的范围
    当程序的某部分检测到一个它无法处理的问题时，需要用到异常处理

    检测出问题的部分应该发出某种信号以表明程序遇到了故障，无法继续下去了，
    而且信号的发出方无须知道故障将在何处得到解决。一旦发出异常信号，检测出问题的部分也就完成了任务

    抛出异常将终止当前的函数，并把控制权转移给能处理该异常的代码

    当执行一个throw时，跟在throw后面的语句将不再被执行。相反，程序的控制权从throw转移到与之匹配的catch模块
    控制权从一处转移到另一处，这里有2个重要的含义
    1) 沿着调用链的函数可能会提早退出
    2）一旦程序开始执行异常处理代码，则沿着调用链创建的对象将被销毁
    throw语句的用法有点类似于return语句
    
*/

int main(int argc, char* argv[]) {
    
    return 0;
}